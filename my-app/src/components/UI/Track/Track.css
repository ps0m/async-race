.track__container{
  position: relative;
  display: flex;
  justify-content: flex-start;
  margin: 10px 0;
  padding: 2px;
  gap: 10px;
  border: 2px #4e4e4e solid;
  perspective: 400px;
}

.track__background{
  position: absolute;
  width: 100%;
  height: 100%;
  background: /* rgba(255, 0, 0, 30%) */ url(./assets/field.jpg) 0 0/auto 100% ;
  opacity: 30%;
  z-index: -1;
}

.track__body{
  display:flex;
  flex-direction:column;
  justify-content: flex-start;
  align-items: flex-start;
}

.track__buttons{
  display:flex;
  justify-content: stretch;
  align-items: flex-start;
  gap: 15px;
  margin: 5px 0;
}

.track__buttons_vertical{
  display:flex;
  flex-direction: column;
  justify-content: stretch;
  align-items: center;
  gap:20px
}

.track__buttons_vertical button{
  flex: 1 0 auto;
  display:flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 10px;
}

.track__buttons_vertical button:first-of-type{
  background-color: #0ddc0d;
  border: 2px solid  #0b9d0b;
}

.track__buttons_vertical button:first-of-type::before{
  background-color: #0b9d0b;
}

.track__buttons_vertical button:last-of-type{
  background-color: #ef0c0c;
  border: 2px solid  #a50000;

}

.track__buttons_vertical button:last-of-type::before{
  background-color: #a50000;
}

.track__buttons_vertical button:first-of-type:disabled,
.track__buttons_vertical button:last-of-type:disabled{
  background-color: #adadad;
  border-color: #5f5f5f;
}

.track__buttons_vertical button:first-of-type:disabled:before,
.track__buttons_vertical button:last-of-type:disabled:before{
    background: #5f5f5f;
}


.track__car, 
.track__flag{
  height: 35px;
}

.track__car svg,
.track__flag svg{
  width: 100%;
  height: 100%;
  fill:rgb(48, 206, 212);
  cursor:pointer;
}

.track__flag{
  position: absolute;
  top: 10%;
  right: 60px;
  transform: translateY(-10%);
  transition: 0.2s;
}

.track__flag:hover{
  transform: rotate3d(1, 1, 1, 0deg)
}

.track__title{
  font-size: 1rem;
  padding-top: 7px;
}


@keyframes slide {
  from {
    transform: translate(var(--from-translate));
  }

  to {
    transform: translate(var(--to-translate));
  }
}